<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>hacking on Laiuppa Blog</title>
    <link>https://anthonylaiuppa.com/tags/hacking/</link>
    <description>Recent content in hacking on Laiuppa Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Mon, 13 Jul 2020 06:40:51 +0900</lastBuildDate>
    
        <atom:link href="https://anthonylaiuppa.com/tags/hacking/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>RGB CTF 2020</title>
        <link>https://anthonylaiuppa.com/posts/rgb-ctf-2020/</link>
        <pubDate>Mon, 13 Jul 2020 06:40:51 +0900</pubDate>
        
        <atom:modified>Mon, 13 Jul 2020 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/rgb-ctf-2020/</guid>
        <description>Intro It&amp;rsquo;s 10:30PM on a Sunday night, and I&amp;rsquo;m wondering what to do with the last few hours of the weekend. Not feeling like working on project code and digging for bug bounty treasure is sounding tedious at the moment. A CTF however sounds like a good time, and a quick trip over to ctftime.org show there&amp;rsquo;s a CTF ongoing!
RGB CTF 2020 Theres a few categories here:
 Beginner - Cryptography - Forensics/OSINT - Misc - Pwn/Rev - Web - [ZTC]</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/rgb-ctf-2020/logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>web</category>
            
          
            
              <category>crypto</category>
            
          
            
              <category>ctf</category>
            
          
            
              <category>infosec</category>
            
          
            
              <category>hacking</category>
            
          
        
        
          
            
              <category>security</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Kringlecon 2018</title>
        <link>https://anthonylaiuppa.com/posts/kringlecon/</link>
        <pubDate>Mon, 14 Jan 2019 06:40:51 +0900</pubDate>
        
        <atom:modified>Mon, 14 Jan 2019 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/kringlecon/</guid>
        <description>Preamble There are alot of reasons to look forward to the holiday season and the annual SANS Holiday Hacking Challenge is no exception. This year they went with a conference theme, where you sign into a virtual world and attend Kringlecon &amp;ndash; a mythical conference hosted by santa and his crack team of information security elves. SANS makes things very approachable by giving you smaller terminal challenges to solve in exchange for hints regarding the bigger objectives.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/kringlecon/flag.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>python</category>
            
          
            
              <category>powershell</category>
            
          
            
              <category>infosec</category>
            
          
            
              <category>security</category>
            
          
            
              <category>pcap</category>
            
          
            
              <category>linux</category>
            
          
            
              <category>windows</category>
            
          
            
              <category>reverse engineering</category>
            
          
        
        
          
            
              <category>hacking</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>More CTF fun!</title>
        <link>https://anthonylaiuppa.com/posts/more-ctf-fun/</link>
        <pubDate>Sun, 16 Dec 2018 06:40:51 +0900</pubDate>
        
        <atom:modified>Sun, 16 Dec 2018 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/more-ctf-fun/</guid>
        <description>Intro A little bit ago a friend sent me a link to a CTF put on by the Leap Security forum. It seems like there&amp;rsquo;s always a shortage of time so I was only able to get through one challenge, but I wanted to share anyways incase someone out there is wanting to play in CTF&amp;rsquo;s but doesn&amp;rsquo;t feel ready.
The Challenge So lets dive in, off the bat this challenge is in the reverse category and we&amp;rsquo;re met with the following code alongside the following hint.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/more-ctf-fun/flag.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hacking</category>
            
          
            
              <category>infosec</category>
            
          
            
              <category>python</category>
            
          
            
              <category>ctf</category>
            
          
        
        
          
            
              <category>hacking</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>EZCTF, a full stack webapp..</title>
        <link>https://anthonylaiuppa.com/posts/ezctf-full-stack/</link>
        <pubDate>Wed, 21 Nov 2018 06:40:51 +0900</pubDate>
        
        <atom:modified>Wed, 21 Nov 2018 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/ezctf-full-stack/</guid>
        <description>Intro Ever sit down to learn something and at first the examples are great, but then when it comes to getting advanced &amp;ndash; you&amp;rsquo;re lost wondering what happened inbetween? When learning I always found it easy to get started, but hard to get anywhere meaningful as all the examples felt like this picture
It was always hard to find comprehensive code examples that covered a wide range of topics, so I figured I would share this project in hopes someone takes away some newfound information or motivation.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/ezctf-full-stack/flag.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>web</category>
            
          
            
              <category>ctf</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>security</category>
            
          
            
              <category>selenium</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Mapping website attack surfaces</title>
        <link>https://anthonylaiuppa.com/posts/mapping-website-attack-surface/</link>
        <pubDate>Tue, 23 Oct 2018 06:40:51 +0900</pubDate>
        
        <atom:modified>Tue, 23 Oct 2018 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/mapping-website-attack-surface/</guid>
        <description>2020 Retrospective While migrating my site years later, it&amp;rsquo;s worth mentioning theres alot of wonderful toolchains available now that really nail this. The biggest one being someone put in the work to properly parse the site-maps.
Intro Trying bug bounties can be fun, you might even walk off like a prospector with gold. Of course similar to sifting through river water looking for gold, youve got sifting through websites looking for things that catch your eye.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/mapping-website-attack-surface/map_cover.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>bug bounty</category>
            
          
            
              <category>reconnaissance</category>
            
          
            
              <category>osint</category>
            
          
            
              <category>hacking</category>
            
          
        
        
          
            
              <category>hacking</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Six years of saved links</title>
        <link>https://anthonylaiuppa.com/posts/six-years-of-links/</link>
        <pubDate>Thu, 03 May 2018 06:40:51 +0900</pubDate>
        
        <atom:modified>Thu, 03 May 2018 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/six-years-of-links/</guid>
        <description>Intro Over six years of studying, and working in technology Ive acquired over 600+ links. Losing these links to me would feel like the burning down of the Library of Alexandria. I use alot of them as references for programming and information security based work.
While scraping all these links I saw the word beginner become less frequent as we got closer to the present day, so I even found a fun way to add a visualization to this post.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/six-years-of-links/best_word_cloud.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>programming</category>
            
          
            
              <category>python</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>security</category>
            
          
        
        
          
            
              <category>programming</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Breaking into penetration testing</title>
        <link>https://anthonylaiuppa.com/posts/breaking-into-penetration-testing/</link>
        <pubDate>Fri, 27 Oct 2017 06:40:51 +0900</pubDate>
        
        <atom:modified>Fri, 27 Oct 2017 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/breaking-into-penetration-testing/</guid>
        <description>Intro Recently I decided I wanted to begin preparing for the OSCP, which for those who arent familiar stands Offensive Security Certified Professional. Its a fairly difficult exam with a large scope of material to cover. I decided to start by focusing on the process of Penetration testing. Penetration testing is an important part of the exam, and something that I still havent done an immense amount of. So I decided it was time to spin up a virtual testing range and go at it.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/breaking-into-penetration-testing/generateVM.PNG" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hacking</category>
            
          
            
              <category>kali</category>
            
          
            
              <category>virtualization</category>
            
          
            
              <category>nmap</category>
            
          
            
              <category>metasploit</category>
            
          
            
              <category>exploitation</category>
            
          
            
              <category>reconnaissance</category>
            
          
        
        
          
            
              <category>hacking</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Enumerating URL shorteners</title>
        <link>https://anthonylaiuppa.com/posts/enumerating-url-shorteners/</link>
        <pubDate>Wed, 11 Jan 2017 06:40:51 +0900</pubDate>
        
        <atom:modified>Wed, 11 Jan 2017 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/enumerating-url-shorteners/</guid>
        <description>Intro I was at work when I almost dropped a URL into goo.gl, you know because short URLs are awesome. However I stopped right before I dropped it in because Google was kind enough to tell me that all URLs shortened are public. Then it occured to me that just haphazardly dropping links in is of course an OPSec issue. With billions of shortened URLs in existence is it really though?</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/enumerating-url-shorteners/oddstuff.PNG" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>enumeration</category>
            
          
            
              <category>python</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>reconnaissance</category>
            
          
            
              <category>osint</category>
            
          
        
        
          
            
              <category>security</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>SANSHHC</title>
        <link>https://anthonylaiuppa.com/posts/sans-holiday-hacking-challenge/</link>
        <pubDate>Sun, 25 Dec 2016 06:40:51 +0900</pubDate>
        
        <atom:modified>Sun, 25 Dec 2016 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/sans-holiday-hacking-challenge/</guid>
        <description>Intro Continuing with my efforts of becoming better at CTFs I decided to participate in the SANS Holiday Hack Challenge. It is a pretty awesome challenge with a lovely pixelated game accompanying the tasks. It takes place in the North Pole and the gist of it is Santa is missing. The elfs were all kinds of helpful providing articles related to some of the tasks. I learned alot about some neat topics that I had little experience with, such a Android application Reverse Engineering and Password Cracking.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/sans-holiday-hacking-challenge/santatweets.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>ctf</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>android</category>
            
          
            
              <category>linux</category>
            
          
            
              <category>python</category>
            
          
            
              <category>osint</category>
            
          
            
              <category>password cracking</category>
            
          
            
              <category>kali</category>
            
          
        
        
          
            
              <category>security</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Binary fun</title>
        <link>https://anthonylaiuppa.com/posts/binary-fun/</link>
        <pubDate>Mon, 02 May 2016 06:40:51 +0900</pubDate>
        
        <atom:modified>Mon, 02 May 2016 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/binary-fun/</guid>
        <description>Binary Fun: With basic binary file analysis A little bit ago I decided CTFs looked like alot of fun and that I want to get involved. At least for me it was a little daunting picking where to start. Some people would start with things they are familiar with but I thought Reverse Engineering sounded cool so I went with that. I got a small binary made by a friend, intended to be similar to a basic reversing challenge, to start with.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/binary-fun/binary.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hacking</category>
            
          
            
              <category>reverse engineering</category>
            
          
            
              <category>ctf</category>
            
          
        
        
          
            
              <category>security</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Obfuscating python</title>
        <link>https://anthonylaiuppa.com/posts/obfuscating-python/</link>
        <pubDate>Thu, 03 Mar 2016 06:40:51 +0900</pubDate>
        
        <atom:modified>Thu, 03 Mar 2016 06:40:51 +0900</atom:modified>
        <guid>https://anthonylaiuppa.com/posts/obfuscating-python/</guid>
        <description>Intro I got to thinking, you can obfuscate js and vbs when serving up code to people, why not Python? Well to there is that whole whitespace thing and lack of semi-colons, but lets see what we can do.
 Obfuscation: &amp;ldquo;To make so confused or opaque as to be difficult to perceive or understand&amp;rdquo;
 In terms of programming one usually doesnt purposefully obfuscate their code as they may wish for others to read it.</description>
        
        <dc:creator>Anthony Laiuppa</dc:creator>
        <media:content url="https://anthonylaiuppa.comimages/posts/obfuscating-python/obfuscated.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>hacking</category>
            
          
            
              <category>obfuscation</category>
            
          
        
        
          
            
              <category>security</category>
            
          
        
        
          
            
          
        
      </item>
      

    
  </channel>
</rss>